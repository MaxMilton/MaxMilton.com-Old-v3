#!/bin/bash

#---------------------------------------#
# Deploy the blog to your remote server #
#---------------------------------------#
#
# REQUIREMENTS:
#   * A *nix web server with SSH access
#   * SSH user with sudo privileges
#
# INSTRUCTIONS:
#   1. Copy this this file: `cp deploy.sh.sample deploy.sh`
#   2. Change the variables bellow to match your setup
#   3. Modify the remote commands to suit your deployment workflow
#   4. Run this script when you want to deploy a new version of your blog
#
#  NOTE: This file should NOT be publicly available as it contains your private info.
#

# Define variables (first 2 are optional)
#THEME_DIR='themes/mm'
#DEPLOY_FILE='deployme.tar.xz'
REMOTE_SSH='user@yoursite.com'
REMOTE_DIR='/var/www/yoursite.com'
FS_PERMISSIONS='www-data:www-data'
CLOUDFLARE_SITE='yoursite.com'

# Print banner
echo -e '\n\033[1mMM    MM MM    MM\nMMM  MMM MMM  MMM\nMM MM MM MM MM MM\nMM    MM MM    MM\nMM    MM MM    MM\n\n Â© MaxMilton.com\033[0m\n\n'

# Run build
source build.sh

# Upload deploy file to the production server
echo -e "\nUploading package to $REMOTE_SSH server...\n"
scp $DEPLOY_FILE $REMOTE_SSH:~/

# Execute the follow commands on the remote server
echo -e "\nExecuting commands on $REMOTE_SSH server...\n"
ssh $REMOTE_SSH DEPLOY_FILE=$DEPLOY_FILE REMOTE_DIR=$REMOTE_DIR FS_PERMISSIONS=$FS_PERMISSIONS 'bash -s' <<'ENDSSH'
  sudo mv ~/$DEPLOY_FILE $REMOTE_DIR
  sudo tar -zcf $REMOTE_DIR/html-backup-$(date --iso-8601=minutes).tar.gz $REMOTE_DIR/html
  sudo rm -rf $REMOTE_DIR/html
  sudo tar xJf $REMOTE_DIR/$DEPLOY_FILE -C $REMOTE_DIR
  sudo mv $REMOTE_DIR/public $REMOTE_DIR/html
  sudo chown -R $FS_PERMISSIONS $REMOTE_DIR/html
  sudo rm -f $REMOTE_DIR/$DEPLOY_FILE
  sudo service nginx reload
ENDSSH

# Clean up left over file
rm -f $DEPLOY_FILE

# Open CloudFlare in a browser to purge the CDN cache
xdg-open "https://www.cloudflare.com/a/caching/$CLOUDFLARE_SITE"
echo -e '\nNOTE: Please purge your CloudFlare cache.\n'

echo -e '\033[1;33mDeployment complete!\033[0m'
